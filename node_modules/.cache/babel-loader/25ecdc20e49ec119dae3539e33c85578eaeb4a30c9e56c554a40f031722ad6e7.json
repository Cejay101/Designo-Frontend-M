{"ast":null,"code":"var _jsxFileName = \"/Users/Ceejay/Desktop/Designo Frontend/src/components/EmbeddedMap.js\",\n  _s = $RefreshSig$();\nimport \"./EmbeddedMap.scss\";\nimport { useState } from \"react\";\n\n// EmbeddedMap component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmbeddedMap = _ref => {\n  _s();\n  let {\n    url,\n    imgSrc\n  } = _ref;\n  // Create a state to handle load error\n  const [loadError, setLoadError] = useState(false);\n\n  // Function to handle iframe load error\n  const handleLoadError = () => {\n    setLoadError(true);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadError ?\n    /*#__PURE__*/\n    // If there's an error loading the iframe, display the default map image\n    _jsxDEV(\"img\", {\n      className: \"default-map\",\n      src: imgSrc,\n      alt: \"Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Otherwise, display the iframe with the embedded map\n    _jsxDEV(\"iframe\", {\n      width: \"100%\",\n      height: \"100%\",\n      frameBorder: \"0\",\n      src: url,\n      title: \"Embedded Map\",\n      loading: \"lazy\",\n      onError: handleLoadError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(EmbeddedMap, \"EyIKZGYKclHRS2M4c4z0cTLehIs=\");\n_c = EmbeddedMap;\nexport default EmbeddedMap;\nvar _c;\n$RefreshReg$(_c, \"EmbeddedMap\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","EmbeddedMap","_ref","_s","url","imgSrc","loadError","setLoadError","handleLoadError","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","width","height","frameBorder","title","loading","onError","_c","$RefreshReg$"],"sources":["/Users/Ceejay/Desktop/Designo Frontend/src/components/EmbeddedMap.js"],"sourcesContent":["import \"./EmbeddedMap.scss\";\nimport { useState } from \"react\";\n\n// EmbeddedMap component\nconst EmbeddedMap = ({ url, imgSrc }) => {\n  // Create a state to handle load error\n  const [loadError, setLoadError] = useState(false);\n\n  // Function to handle iframe load error\n  const handleLoadError = () => {\n    setLoadError(true);\n  };\n\n  return (\n    <>\n      {loadError ? (\n        // If there's an error loading the iframe, display the default map image\n        <img className=\"default-map\" src={imgSrc} alt=\"Map\" />\n      ) : (\n        // Otherwise, display the iframe with the embedded map\n        <iframe\n          width=\"100%\"\n          height=\"100%\"\n          frameBorder=\"0\"\n          src={url}\n          title=\"Embedded Map\"\n          loading=\"lazy\"\n          onError={handleLoadError}\n        ></iframe>\n      )}\n    </>\n  );\n};\n\nexport default EmbeddedMap;\n"],"mappings":";;AAAA,OAAO,oBAAoB;AAC3B,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,WAAW,GAAGC,IAAA,IAAqB;EAAAC,EAAA;EAAA,IAApB;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAClC;EACA,MAAM,CAACI,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMY,eAAe,GAAGA,CAAA,KAAM;IAC5BD,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACGH,SAAS;IAAA;IACR;IACAR,OAAA;MAAKY,SAAS,EAAC,aAAa;MAACC,GAAG,EAAEN,MAAO;MAACO,GAAG,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;IAAA;IAEtD;IACAlB,OAAA;MACEmB,KAAK,EAAC,MAAM;MACZC,MAAM,EAAC,MAAM;MACbC,WAAW,EAAC,GAAG;MACfR,GAAG,EAAEP,GAAI;MACTgB,KAAK,EAAC,cAAc;MACpBC,OAAO,EAAC,MAAM;MACdC,OAAO,EAAEd;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAE5B,iBACA;AAEP,CAAC;AAACb,EAAA,CA5BIF,WAAW;AAAAsB,EAAA,GAAXtB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}